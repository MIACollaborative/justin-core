"use strict";(self.webpackChunkjustin_core_docs=self.webpackChunkjustin_core_docs||[]).push([[3293],{8247:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reference/types","title":"Exported Types","description":"This reference page explains the key types exported from justin-core. These are useful for writing custom handlers, extending the framework, or understanding how execution works.","source":"@site/versioned_docs/version-0.1.0/reference/types.md","sourceDirName":"reference","slug":"/reference/types","permalink":"/justin-core/reference/types","draft":false,"unlisted":false,"tags":[],"version":"0.1.0","lastUpdatedBy":"Jose Rubio","lastUpdatedAt":1753903774000,"frontMatter":{"id":"types","title":"Exported Types","sidebar\\\\_position":4},"sidebar":"tutorialSidebar","previous":{"title":"JUser","permalink":"/justin-core/concepts/users"}}');var t=s(4848),i=s(8453);const l={id:"types",title:"Exported Types",sidebar_position:4},o="Exported Types",d={},c=[{value:"\u2705 <code>StepReturnResult</code>",id:"-stepreturnresult",level:2},{value:"\ud83e\udde0 <code>DecisionRule</code>",id:"-decisionrule",level:2},{value:"\ud83d\udd27 <code>Task</code>",id:"-task",level:2},{value:"\ud83e\udde9 Supporting Types",id:"-supporting-types",level:2},{value:"<code>JUser</code>",id:"juser",level:3},{value:"<code>JEvent</code>",id:"jevent",level:3},{value:"\ud83d\udcda Enums",id:"-enums",level:2},{value:"<code>HandlerType</code>",id:"handlertype",level:3},{value:"<code>DecisionRuleStep</code>",id:"decisionrulestep",level:3},{value:"<code>TaskStep</code>",id:"taskstep",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"exported-types",children:"Exported Types"})}),"\n",(0,t.jsxs)(n.p,{children:["This reference page explains the key types exported from ",(0,t.jsx)(n.code,{children:"justin-core"}),". These are useful for writing custom handlers, extending the framework, or understanding how execution works."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-stepreturnresult",children:["\u2705 ",(0,t.jsx)(n.code,{children:"StepReturnResult"})]}),"\n",(0,t.jsx)(n.p,{children:"Used as the return type for all handler steps:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type StepReturnResult<T = any> = {\n  status: 'success' | 'stop' | 'error';\n  result?: T;\n  error?: any;\n};\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"success"}),": Step ran successfully"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stop"}),": Skip this handler\u2019s logic (or skip a step)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"error"}),": Indicates failure; caught and logged by the runtime"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Used in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"shouldActivate"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"doAction"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"selectAction"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-decisionrule",children:["\ud83e\udde0 ",(0,t.jsx)(n.code,{children:"DecisionRule"})]}),"\n",(0,t.jsx)(n.p,{children:"Decision rules define adaptive logic. They evaluate whether an intervention should occur, what it should be, and how to deliver it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type DecisionRule = {\n  name: string;\n  type: HandlerType.DECISION_RULE;\n\n  shouldActivate: (user: JUser, event: JEvent) => Promise<StepReturnResult>;\n  // Determine whether this rule should be run for the user. Return `stop` to skip.\n\n  selectAction: (user: JUser, event: JEvent, previousResult: StepReturnResult) => Promise<StepReturnResult>;\n  // Decide what action to take. Typically returns a message, reminder, or trigger object.\n\n  doAction: (user: JUser, event: JEvent, previousResult: StepReturnResult) => Promise<StepReturnResult>;\n  // Actually deliver the action. Send the push notification, log the result, etc.\n\n  beforeExecution?: (event: JEvent) => Promise<void>;\n  // Optional: run once before any user-level execution. Useful for bulk fetches.\n\n  afterExecution?: (event: JEvent) => Promise<void>;\n  // Optional: run once after all users are processed. Useful for bulk summaries or notifications.\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-task",children:["\ud83d\udd27 ",(0,t.jsx)(n.code,{children:"Task"})]}),"\n",(0,t.jsx)(n.p,{children:"Tasks are utility handlers that perform side effects like fetching data, writing logs, etc. They do not require an action to be selected."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type Task = {\n  name: string;\n  type: HandlerType.TASK;\n\n  shouldActivate?: (user: JUser, event: JEvent) => Promise<StepReturnResult>;\n  // Determine if the task should be run for this user.\n\n  doAction: (user: JUser, event: JEvent, previousResult: StepReturnResult) => Promise<StepReturnResult>;\n  // Execute the core behavior of the task (e.g. API call, DB write, transformation).\n\n  beforeExecution?: (event: JEvent) => Promise<void>;\n  // Optional: fetch or prepare shared data once before all users are processed.\n\n  afterExecution?: (event: JEvent) => Promise<void>;\n  // Optional: send batch logs, trigger admin alerts, or clean up shared resources.\n};\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 Tasks do not use ",(0,t.jsx)(n.code,{children:"selectAction"})," because they are not responsible for choosing or delivering interventions \u2014 they simply perform operations needed by the rule or study infrastructure."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-supporting-types",children:"\ud83e\udde9 Supporting Types"}),"\n",(0,t.jsx)(n.h3,{id:"juser",children:(0,t.jsx)(n.code,{children:"JUser"})}),"\n",(0,t.jsx)(n.p,{children:"Represents a participant. Includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"participantId"}),": Unique identifier"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"customFields"}),": In-memory store for transient state between handlers (e.g. step count)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"jevent",children:(0,t.jsx)(n.code,{children:"JEvent"})}),"\n",(0,t.jsx)(n.p,{children:"Represents a triggered event. Includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),': The event name (e.g. "dailyReminder")']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timestamp"}),": When the event was published or run"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-enums",children:"\ud83d\udcda Enums"}),"\n",(0,t.jsx)(n.h3,{id:"handlertype",children:(0,t.jsx)(n.code,{children:"HandlerType"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"enum HandlerType {\n  DECISION_RULE = 'DECISION_RULE',\n  TASK = 'TASK',\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"decisionrulestep",children:(0,t.jsx)(n.code,{children:"DecisionRuleStep"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"enum DecisionRuleStep {\n  SHOULD_ACTIVATE = 'shouldActivate',\n  SELECT_ACTION = 'selectAction',\n  DO_ACTION = 'doAction',\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"taskstep",children:(0,t.jsx)(n.code,{children:"TaskStep"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"enum TaskStep {\n  SHOULD_ACTIVATE = 'shouldActivate',\n  DO_ACTION = 'doAction',\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"This page will grow over time as new extension points are exposed."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);